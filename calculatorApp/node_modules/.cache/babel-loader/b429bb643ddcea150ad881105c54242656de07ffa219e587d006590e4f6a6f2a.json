{"ast":null,"code":"var _jsxFileName = \"/home/mcfly/Projects/react/calculatorApp/src/App.js\",\n  _s = $RefreshSig$();\n// Import React hooks\nimport { useState, useRef } from \"react\";\n// Import CSS file\nimport \"./App.css\";\n\n// Define App component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Initialize input and result reference hooks\n  const inputRef = useRef(null);\n  const resultRef = useRef(null);\n  // Initialize state for result with initial value 0\n  const [result, setResult] = useState(0);\n\n  // Define plus function to add input value to result\n  function plus(e) {\n    e.preventDefault();\n    setResult(result => result + Number(inputRef.current.value));\n  }\n  ;\n\n  // Define minus function to subtract input value from result\n  function minus(e) {\n    e.preventDefault();\n    setResult(result => result - Number(inputRef.current.value));\n  }\n  ;\n\n  // Define times function to multiply input value with result\n  function times(e) {\n    e.preventDefault();\n    setResult(result => result * Number(inputRef.current.value));\n  }\n  ;\n\n  // Define divide function to divide result by input value\n  function divide(e) {\n    e.preventDefault();\n    setResult(result => result / Number(inputRef.current.value));\n  }\n  ;\n\n  // Define resetInput function to reset input value\n  function resetInput(e) {\n    e.preventDefault();\n    Number(inputRef.current.value = 0);\n    // Can be simplified to \n    // inputRef.current.value = 0;\n  }\n  ;\n\n  // Define resetResult function to reset result value\n  function resetResult(e) {\n    setResult(0);\n  }\n  ;\n\n  // Render App component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Simplest Working Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: resultRef,\n        children: [\"My result : \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        pattern: \"[0-9]\",\n        ref: inputRef,\n        type: \"number\",\n        placeholder: \"Type a number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: plus,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: minus,\n        children: \"minus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: times,\n        children: \"times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: divide,\n        children: \"divide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetInput,\n        children: \"reset input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetResult,\n        children: \"reset result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n// Export App component\n_s(App, \"iMUG+fAB4x2aPXzcLfNNNKt0TI8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","App","_s","inputRef","resultRef","result","setResult","plus","e","preventDefault","Number","current","value","minus","times","divide","resetInput","resetResult","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","pattern","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/mcfly/Projects/react/calculatorApp/src/App.js"],"sourcesContent":["// Import React hooks\nimport {\n  useState,\n  useRef\n} from \"react\";\n// Import CSS file\nimport \"./App.css\";\n\n// Define App component\nfunction App() {\n  // Initialize input and result reference hooks\n  const inputRef = useRef(null);\n  const resultRef = useRef(null);\n  // Initialize state for result with initial value 0\n  const [result, setResult] = useState(0);\n\n  // Define plus function to add input value to result\n  function plus(e) {\n    e.preventDefault();\n    setResult((result) => result + Number(inputRef.current.value));\n  };\n\n  // Define minus function to subtract input value from result\n  function minus(e) {\n    e.preventDefault();\n    setResult((result) => result - Number(inputRef.current.value));\n  };\n\n  // Define times function to multiply input value with result\n  function times(e) {\n    e.preventDefault();\n    setResult((result) => result * Number(inputRef.current.value));\n  };\n\n  // Define divide function to divide result by input value\n  function divide(e) {\n    e.preventDefault();\n    setResult((result) => result / Number(inputRef.current.value));\n  };\n\n  // Define resetInput function to reset input value\n  function resetInput(e) {\n    e.preventDefault();\n    Number(inputRef.current.value = 0);\n    // Can be simplified to \n    // inputRef.current.value = 0;\n  };\n\n  // Define resetResult function to reset result value\n  function resetResult(e) {\n    setResult(0)\n  };\n\n  // Render App component\n  return (\n    <div className=\"App\">\n      <div>\n        <h1>Simplest Working Calculator</h1>\n      </div>\n      <form>\n        <p ref={resultRef}>\n          {/* Display the current total */}\n          My result : {result}\n        </p>\n        <input\n          pattern=\"[0-9]\"\n          ref={inputRef}\n          type=\"number\"\n          placeholder=\"Type a number\"\n        />\n        <button onClick={plus}>add</button>\n        {/* Add and display the subtract button */}\n        <button onClick={minus}>minus</button>\n        {/* Add and display the multiply button */}\n        <button onClick={times}>times</button>\n        {/* Add and display the divide button */}\n        <button onClick={divide}>divide</button>\n        {/* Add and display the resetInput button */}\n        <button onClick={resetInput}>reset input</button>\n        {/* Add and display the resetResult button */}\n        <button onClick={resetResult}>reset result</button>\n      </form>\n    </div>\n  );\n}\n\n// Export App component\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}